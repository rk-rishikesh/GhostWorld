parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"JMur":[function(require,module,exports) {
"use strict";function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.mustBeMetaMask,o=void 0!==t&&t,i=e.silent,n=void 0!==i&&i,r=e.timeout,a=void 0===r?3e3:r;!function(){if("boolean"!=typeof o)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!=typeof n)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!=typeof a)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();var d=!1;return new Promise(function(e){function t(){if(!d){d=!0,window.removeEventListener("ethereum#initialized",t);var i=window.ethereum;if(!i||o&&!i.isMetaMask){var r=o&&i?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!n&&console.error("@metamask/detect-provider:",r),e(null)}else e(i)}}window.ethereum?t():(window.addEventListener("ethereum#initialized",t,{once:!0}),setTimeout(function(){t()},a))})}module.exports=e;
},{}],"gVvK":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetamaskAdapter=void 0;var t=r(require("@babel/runtime/helpers/defineProperty")),e=r(require("@metamask/detect-provider")),i=require("@web3auth/base");function r(t){return t&&t.__esModule?t:{default:t}}class a extends i.BaseAdapter{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,t.default)(this,"adapterNamespace",i.ADAPTER_NAMESPACES.EIP155),(0,t.default)(this,"currentChainNamespace",i.CHAIN_NAMESPACES.EIP155),(0,t.default)(this,"type",i.ADAPTER_CATEGORY.EXTERNAL),(0,t.default)(this,"name",i.WALLET_ADAPTERS.METAMASK),(0,t.default)(this,"status",i.ADAPTER_STATUS.NOT_READY),(0,t.default)(this,"rehydrated",!1),(0,t.default)(this,"metamaskProvider",null),this.chainConfig=e.chainConfig||null}get provider(){return this.status===i.ADAPTER_STATUS.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(t){throw new Error("Not implemented")}async init(t){if(super.checkInitializationRequirements(),this.metamaskProvider=await(0,e.default)({mustBeMetaMask:!0}),!this.metamaskProvider)throw i.WalletInitializationError.notInstalled("Metamask extension is not installed");this.status=i.ADAPTER_STATUS.READY,this.emit(i.ADAPTER_EVENTS.READY,i.WALLET_ADAPTERS.METAMASK);try{t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(r){this.emit(i.ADAPTER_EVENTS.ERRORED,r)}}setAdapterSettings(t){}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=(0,i.getChainConfig)(i.CHAIN_NAMESPACES.EIP155,1)),this.status=i.ADAPTER_STATUS.CONNECTING,this.emit(i.ADAPTER_EVENTS.CONNECTING,{adapter:i.WALLET_ADAPTERS.METAMASK}),!this.metamaskProvider)throw i.WalletLoginError.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:e}=this.metamaskProvider;if(e!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=i.ADAPTER_STATUS.CONNECTED,!this.provider)throw i.WalletLoginError.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",()=>{this.disconnect()}),this.emit(i.ADAPTER_EVENTS.CONNECTED,{adapter:i.WALLET_ADAPTERS.METAMASK,reconnected:this.rehydrated}),this.provider}catch(t){throw this.status=i.ADAPTER_STATUS.READY,this.rehydrated=!1,this.emit(i.ADAPTER_EVENTS.ERRORED,t),i.WalletLoginError.connectionError("Failed to login with metamask wallet")}}async disconnect(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==i.ADAPTER_STATUS.CONNECTED)throw i.WalletLoginError.disconnectionError("Not connected with wallet");null===(t=this.provider)||void 0===t||t.removeAllListeners(),e.cleanup?(this.status=i.ADAPTER_STATUS.NOT_READY,this.metamaskProvider=null):this.status=i.ADAPTER_STATUS.READY,this.rehydrated=!1,this.emit(i.ADAPTER_EVENTS.DISCONNECTED)}async getUserInfo(){if(this.status!==i.ADAPTER_STATUS.CONNECTED)throw i.WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(t){if(!this.metamaskProvider)throw i.WalletLoginError.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:t.chainId}]})}catch(e){if(4902!==e.code)throw e;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:t.chainId,chainName:t.displayName,rpcUrls:[t.rpcTarget]}]})}}}exports.MetamaskAdapter=a;
},{"@babel/runtime/helpers/defineProperty":"xwXl","@metamask/detect-provider":"JMur","@web3auth/base":"BZvL"}]},{},[], null)
//# sourceMappingURL=/metamaskAdapter.esm.4aa94ef0.js.map