{"id":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","dependencies":[{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\package.json","includedInParent":true,"mtime":1648301114916},{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\package.json","includedInParent":true,"mtime":1648228038211},{"name":"../errors","loc":{"line":10,"column":34,"index":393},"parent":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\hash.js","resolved":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\errors.js"},{"name":"./bytes","loc":{"line":11,"column":22,"index":430},"parent":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\hash.js","resolved":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\bytes.js"},{"name":"./utf8","loc":{"line":12,"column":21,"index":463},"parent":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\hash.js","resolved":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\utf8.js"},{"name":"./keccak256","loc":{"line":13,"column":26,"index":500},"parent":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\hash.js","resolved":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\ethereum-tx-decoder\\node_modules\\ethers\\utils\\keccak256.js"}],"generated":{"js":"'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors = __importStar(require(\"../errors\"));\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar keccak256_1 = require(\"./keccak256\");\n///////////////////////////////\nvar Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nvar UseSTD3ASCIIRules = new RegExp(\"^[a-z0-9.-]*$\");\nfunction namehash(name) {\n    if (typeof (name) !== 'string') {\n        errors.throwError('invalid address - ' + String(name), errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    name = name.toLowerCase();\n    // Supporting the full UTF-8 space requires additional (and large)\n    // libraries, so for now we simply do not support them.\n    // It should be fairly easy in the future to support systems with\n    // String.normalize, but that is future work.\n    if (!name.match(UseSTD3ASCIIRules)) {\n        errors.throwError('contains invalid UseSTD3ASCIIRules characters', errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    var result = Zeros;\n    while (name.length) {\n        var partition = name.match(Partition);\n        var label = utf8_1.toUtf8Bytes(partition[3]);\n        result = keccak256_1.keccak256(bytes_1.concat([result, keccak256_1.keccak256(label)]));\n        name = partition[2] || '';\n    }\n    return bytes_1.hexlify(result);\n}\nexports.namehash = namehash;\nfunction id(text) {\n    return keccak256_1.keccak256(utf8_1.toUtf8Bytes(text));\n}\nexports.id = id;\nfunction hashMessage(message) {\n    return keccak256_1.keccak256(bytes_1.concat([\n        utf8_1.toUtf8Bytes('\\x19Ethereum Signed Message:\\n'),\n        utf8_1.toUtf8Bytes(String(message.length)),\n        ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message)\n    ]));\n}\nexports.hashMessage = hashMessage;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/ethereum-tx-decoder/node_modules/ethers/utils/hash.js":"'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors = __importStar(require(\"../errors\"));\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar keccak256_1 = require(\"./keccak256\");\n///////////////////////////////\nvar Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nvar UseSTD3ASCIIRules = new RegExp(\"^[a-z0-9.-]*$\");\nfunction namehash(name) {\n    if (typeof (name) !== 'string') {\n        errors.throwError('invalid address - ' + String(name), errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    name = name.toLowerCase();\n    // Supporting the full UTF-8 space requires additional (and large)\n    // libraries, so for now we simply do not support them.\n    // It should be fairly easy in the future to support systems with\n    // String.normalize, but that is future work.\n    if (!name.match(UseSTD3ASCIIRules)) {\n        errors.throwError('contains invalid UseSTD3ASCIIRules characters', errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    var result = Zeros;\n    while (name.length) {\n        var partition = name.match(Partition);\n        var label = utf8_1.toUtf8Bytes(partition[3]);\n        result = keccak256_1.keccak256(bytes_1.concat([result, keccak256_1.keccak256(label)]));\n        name = partition[2] || '';\n    }\n    return bytes_1.hexlify(result);\n}\nexports.namehash = namehash;\nfunction id(text) {\n    return keccak256_1.keccak256(utf8_1.toUtf8Bytes(text));\n}\nexports.id = id;\nfunction hashMessage(message) {\n    return keccak256_1.keccak256(bytes_1.concat([\n        utf8_1.toUtf8Bytes('\\x19Ethereum Signed Message:\\n'),\n        utf8_1.toUtf8Bytes(String(message.length)),\n        ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message)\n    ]));\n}\nexports.hashMessage = hashMessage;\n"},"lineCount":58}},"error":null,"hash":"9746d6d1b53bdcc13b99c206b68286cd","cacheData":{"env":{}}}