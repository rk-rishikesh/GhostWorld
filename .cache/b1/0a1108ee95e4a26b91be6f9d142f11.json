{"id":"node_modules/broadcast-channel/dist/lib/methods/native.js","dependencies":[{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\package.json","includedInParent":true,"mtime":1648301114916},{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\broadcast-channel\\package.json","includedInParent":true,"mtime":1648301044983},{"name":"../util","loc":{"line":15,"column":20,"index":372},"parent":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\broadcast-channel\\dist\\lib\\methods\\native.js","resolved":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\broadcast-channel\\dist\\lib\\util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (_util.isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/methods/native.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}}],"sources":{"node_modules/broadcast-channel/dist/lib/methods/native.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (_util.isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"},"lineCount":87}},"error":null,"hash":"c38dd5a5c29ac930f6741c678114245f","cacheData":{"env":{}}}