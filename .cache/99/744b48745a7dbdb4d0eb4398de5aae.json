{"id":"node_modules/broadcast-channel/dist/lib/options.js","dependencies":[{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\package.json","includedInParent":true,"mtime":1648301114916},{"name":"C:\\Users\\rishi\\ethernal\\GhostWorld\\node_modules\\broadcast-channel\\package.json","includedInParent":true,"mtime":1648301044983}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillOptionsWithDefaults = fillOptionsWithDefaults;\n\nfunction fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/broadcast-channel/dist/lib/options.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/broadcast-channel/dist/lib/options.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillOptionsWithDefaults = fillOptionsWithDefaults;\n\nfunction fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}"},"lineCount":37}},"error":null,"hash":"de8afb3854b507e2680aa6453917676e","cacheData":{"env":{}}}